Loading program examples/bin/test.out
Number of global variables 4
Data segment:
	    0: [  230] 	 [11100110]
	    1: [  128] 	 [10000000]
	    2: [    3] 	 [00000011]
	    3: [    0] 	 [00000000]
	    4: [    3] 	 [00000011]
	    5: [    0] 	 [00000000]
	    6: [   45] 	 [00101101]
	    7: [    0] 	 [00000000]
Registers:
	pc [    0] 	 [00000000 00000000]
	ir [    0] 	 [00000000 00000000]

	r1 [    0] [    0] [00000000 00000000]
	r2 [    0] [    0] [00000000 00000000]
	r3 [    0] [    0] [00000000 00000000]
	r4 [    0] [    0] [00000000 00000000]
	r5 [    0] [    0] [00000000 00000000]
	r6 [    0] [    0] [00000000 00000000]
	r7 [    0] [    0] [00000000 00000000]
	r8 [    0] [    0] [00000000 00000000]
Decoding instruction 0x0 at address 0
Memory instruction 0x0 --> type = 0, opcode = 0, address = 0, register = 0 (r1)
Data segment:
	    0: [  230] 	 [11100110]
	    1: [  128] 	 [10000000]
	    2: [    3] 	 [00000011]
	    3: [    0] 	 [00000000]
	    4: [    3] 	 [00000011]
	    5: [    0] 	 [00000000]
	    6: [   45] 	 [00101101]
	    7: [    0] 	 [00000000]
Registers:
	pc [    2] 	 [00000000 00000010]
	ir [    0] 	 [00000000 00000000]

	r1 [32998] [-32538] [10000000 11100110]
	r2 [    0] [    0] [00000000 00000000]
	r3 [    0] [    0] [00000000 00000000]
	r4 [    0] [    0] [00000000 00000000]
	r5 [    0] [    0] [00000000 00000000]
	r6 [    0] [    0] [00000000 00000000]
	r7 [    0] [    0] [00000000 00000000]
	r8 [    0] [    0] [00000000 00000000]
Decoding instruction 0x11 at address 2
Memory instruction 0x11 --> type = 0, opcode = 0, address = 2, register = 1 (r2)
Data segment:
	    0: [  230] 	 [11100110]
	    1: [  128] 	 [10000000]
	    2: [    3] 	 [00000011]
	    3: [    0] 	 [00000000]
	    4: [    3] 	 [00000011]
	    5: [    0] 	 [00000000]
	    6: [   45] 	 [00101101]
	    7: [    0] 	 [00000000]
Registers:
	pc [    4] 	 [00000000 00000100]
	ir [   17] 	 [00000000 00010001]

	r1 [32998] [-32538] [10000000 11100110]
	r2 [    3] [    3] [00000000 00000011]
	r3 [    0] [    0] [00000000 00000000]
	r4 [    0] [    0] [00000000 00000000]
	r5 [    0] [    0] [00000000 00000000]
	r6 [    0] [    0] [00000000 00000000]
	r7 [    0] [    0] [00000000 00000000]
	r8 [    0] [    0] [00000000 00000000]
Decoding instruction 0x22 at address 4
Memory instruction 0x22 --> type = 0, opcode = 0, address = 4, register = 2 (r3)
Data segment:
	    0: [  230] 	 [11100110]
	    1: [  128] 	 [10000000]
	    2: [    3] 	 [00000011]
	    3: [    0] 	 [00000000]
	    4: [    3] 	 [00000011]
	    5: [    0] 	 [00000000]
	    6: [   45] 	 [00101101]
	    7: [    0] 	 [00000000]
Registers:
	pc [    6] 	 [00000000 00000110]
	ir [   34] 	 [00000000 00100010]

	r1 [32998] [-32538] [10000000 11100110]
	r2 [    3] [    3] [00000000 00000011]
	r3 [    3] [    3] [00000000 00000011]
	r4 [    0] [    0] [00000000 00000000]
	r5 [    0] [    0] [00000000 00000000]
	r6 [    0] [    0] [00000000 00000000]
	r7 [    0] [    0] [00000000 00000000]
	r8 [    0] [    0] [00000000 00000000]
Decoding instruction 0x9a0a at address 6
ALU instruction 0x9a0a --> type = 2, opcode = 6, size = 1, reg_in_1 = 0 (r1), reg_in_2 = 1 (r2), reg_out = 2 (r3)
Data segment:
	    0: [  230] 	 [11100110]
	    1: [  128] 	 [10000000]
	    2: [    3] 	 [00000011]
	    3: [    0] 	 [00000000]
	    4: [    3] 	 [00000011]
	    5: [    0] 	 [00000000]
	    6: [   45] 	 [00101101]
	    7: [    0] 	 [00000000]
Registers:
	pc [    8] 	 [00000000 00001000]
	ir [39434] 	 [10011010 00001010]

	r1 [32998] [-32538] [10000000 11100110]
	r2 [    3] [    3] [00000000 00000011]
	r3 [61468] [-4068] [11110000 00011100]
	r4 [    0] [    0] [00000000 00000000]
	r5 [    0] [    0] [00000000 00000000]
	r6 [    0] [    0] [00000000 00000000]
	r7 [    0] [    0] [00000000 00000000]
	r8 [    0] [    0] [00000000 00000000]
Decoding instruction 0x4000 at address 8
Load immediate instruction 0x4000 --> type = 1, value = 0, register = 0 (r1)
Data segment:
	    0: [  230] 	 [11100110]
	    1: [  128] 	 [10000000]
	    2: [    3] 	 [00000011]
	    3: [    0] 	 [00000000]
	    4: [    3] 	 [00000011]
	    5: [    0] 	 [00000000]
	    6: [   45] 	 [00101101]
	    7: [    0] 	 [00000000]
Registers:
	pc [   10] 	 [00000000 00001010]
	ir [16384] 	 [01000000 00000000]

	r1 [    0] [    0] [00000000 00000000]
	r2 [    3] [    3] [00000000 00000011]
	r3 [61468] [-4068] [11110000 00011100]
	r4 [    0] [    0] [00000000 00000000]
	r5 [    0] [    0] [00000000 00000000]
	r6 [    0] [    0] [00000000 00000000]
	r7 [    0] [    0] [00000000 00000000]
	r8 [    0] [    0] [00000000 00000000]
Decoding instruction 0xc000 at address 10
Interrupt instruction 0xc000 --> type = 3, interrupt number = 0
System call 0: terminate program with status 0.
Data segment:
	    0: [  230] 	 [11100110]
	    1: [  128] 	 [10000000]
	    2: [    3] 	 [00000011]
	    3: [    0] 	 [00000000]
	    4: [    3] 	 [00000011]
	    5: [    0] 	 [00000000]
	    6: [   45] 	 [00101101]
	    7: [    0] 	 [00000000]
Registers:
	pc [   10] 	 [00000000 00001010]
	ir [49152] 	 [11000000 00000000]

	r1 [    0] [    0] [00000000 00000000]
	r2 [    3] [    3] [00000000 00000011]
	r3 [61468] [-4068] [11110000 00011100]
	r4 [    0] [    0] [00000000 00000000]
	r5 [    0] [    0] [00000000 00000000]
	r6 [    0] [    0] [00000000 00000000]
	r7 [    0] [    0] [00000000 00000000]
	r8 [    0] [    0] [00000000 00000000]
