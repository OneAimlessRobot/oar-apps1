#------------------------------------------------------------------------------#
# This makefile was generated by 'cbp2make' tool rev.147                       #
#------------------------------------------------------------------------------#


WORKDIR = `pwd`

CC = gcc
CXX = g++
AR = ar
LD = g++
WINDRES = windres

INC = 
CFLAGS = -Wall
RESINC = 
LIBDIR = 
LIB = 
LDFLAGS = -lSDL2 -lm -lpthread

INC_DEBUG = $(INC)
CFLAGS_DEBUG = $(CFLAGS) -g
RESINC_DEBUG = $(RESINC)
RCFLAGS_DEBUG = $(RCFLAGS)
LIBDIR_DEBUG = $(LIBDIR)
LIB_DEBUG = $(LIB)
LDFLAGS_DEBUG = $(LDFLAGS)
OBJDIR_DEBUG = obj/Debug
DEP_DEBUG = 
OUT_DEBUG = bin/Debug/ParticleSim

INC_RELEASE = $(INC)
CFLAGS_RELEASE = $(CFLAGS) -O2
RESINC_RELEASE = $(RESINC)
RCFLAGS_RELEASE = $(RCFLAGS)
LIBDIR_RELEASE = $(LIBDIR)
LIB_RELEASE = $(LIB)
LDFLAGS_RELEASE = $(LDFLAGS) -s
OBJDIR_RELEASE = obj/Release
DEP_RELEASE = 
OUT_RELEASE = bin/Release/ParticleSim

OBJ_DEBUG = $(OBJDIR_DEBUG)/main.o $(OBJDIR_DEBUG)/resourcePaths.o $(OBJDIR_DEBUG)/Factorized/EntitySpawners.o $(OBJDIR_DEBUG)/Factorized/gunCommands.o $(OBJDIR_DEBUG)/Factorized/menuCommands.o $(OBJDIR_DEBUG)/Factorized/physicsCommands.o $(OBJDIR_DEBUG)/Systems/InteractiveSim.o $(OBJDIR_DEBUG)/Types/Bullet.o $(OBJDIR_DEBUG)/Factorized/EntityMgmnt.o $(OBJDIR_DEBUG)/Types/Collider.o $(OBJDIR_DEBUG)/Types/Entity.o $(OBJDIR_DEBUG)/Types/GVector.o $(OBJDIR_DEBUG)/Types/Gun.o $(OBJDIR_DEBUG)/Types/physicsAux.o $(OBJDIR_DEBUG)/aux.o

OBJ_RELEASE = $(OBJDIR_RELEASE)/main.o $(OBJDIR_RELEASE)/resourcePaths.o $(OBJDIR_RELEASE)/Factorized/EntitySpawners.o $(OBJDIR_RELEASE)/Factorized/gunCommands.o $(OBJDIR_RELEASE)/Factorized/menuCommands.o $(OBJDIR_RELEASE)/Factorized/physicsCommands.o $(OBJDIR_RELEASE)/Systems/InteractiveSim.o $(OBJDIR_RELEASE)/Types/Bullet.o $(OBJDIR_RELEASE)/Factorized/EntityMgmnt.o $(OBJDIR_RELEASE)/Types/Collider.o $(OBJDIR_RELEASE)/Types/Entity.o $(OBJDIR_RELEASE)/Types/GVector.o $(OBJDIR_RELEASE)/Types/Gun.o $(OBJDIR_RELEASE)/Types/physicsAux.o $(OBJDIR_RELEASE)/aux.o

all: debug release

clean: clean_debug clean_release

before_debug: 
	test -d bin/Debug || mkdir -p bin/Debug
	test -d $(OBJDIR_DEBUG) || mkdir -p $(OBJDIR_DEBUG)
	test -d $(OBJDIR_DEBUG)/Factorized || mkdir -p $(OBJDIR_DEBUG)/Factorized
	test -d $(OBJDIR_DEBUG)/Systems || mkdir -p $(OBJDIR_DEBUG)/Systems
	test -d $(OBJDIR_DEBUG)/Types || mkdir -p $(OBJDIR_DEBUG)/Types

after_debug: 

debug: before_debug out_debug after_debug

out_debug: before_debug $(OBJ_DEBUG) $(DEP_DEBUG)
	$(LD) $(LIBDIR_DEBUG) -o $(OUT_DEBUG) $(OBJ_DEBUG)  $(LDFLAGS_DEBUG) $(LIB_DEBUG)

$(OBJDIR_DEBUG)/main.o: main.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c main.cpp -o $(OBJDIR_DEBUG)/main.o

$(OBJDIR_DEBUG)/resourcePaths.o: resourcePaths.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c resourcePaths.cpp -o $(OBJDIR_DEBUG)/resourcePaths.o

$(OBJDIR_DEBUG)/Factorized/EntitySpawners.o: Factorized/EntitySpawners.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c Factorized/EntitySpawners.cpp -o $(OBJDIR_DEBUG)/Factorized/EntitySpawners.o

$(OBJDIR_DEBUG)/Factorized/gunCommands.o: Factorized/gunCommands.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c Factorized/gunCommands.cpp -o $(OBJDIR_DEBUG)/Factorized/gunCommands.o

$(OBJDIR_DEBUG)/Factorized/menuCommands.o: Factorized/menuCommands.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c Factorized/menuCommands.cpp -o $(OBJDIR_DEBUG)/Factorized/menuCommands.o

$(OBJDIR_DEBUG)/Factorized/physicsCommands.o: Factorized/physicsCommands.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c Factorized/physicsCommands.cpp -o $(OBJDIR_DEBUG)/Factorized/physicsCommands.o

$(OBJDIR_DEBUG)/Systems/InteractiveSim.o: Systems/InteractiveSim.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c Systems/InteractiveSim.cpp -o $(OBJDIR_DEBUG)/Systems/InteractiveSim.o

$(OBJDIR_DEBUG)/Types/Bullet.o: Types/Bullet.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c Types/Bullet.cpp -o $(OBJDIR_DEBUG)/Types/Bullet.o

$(OBJDIR_DEBUG)/Factorized/EntityMgmnt.o: Factorized/EntityMgmnt.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c Factorized/EntityMgmnt.cpp -o $(OBJDIR_DEBUG)/Factorized/EntityMgmnt.o

$(OBJDIR_DEBUG)/Types/Collider.o: Types/Collider.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c Types/Collider.cpp -o $(OBJDIR_DEBUG)/Types/Collider.o

$(OBJDIR_DEBUG)/Types/Entity.o: Types/Entity.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c Types/Entity.cpp -o $(OBJDIR_DEBUG)/Types/Entity.o

$(OBJDIR_DEBUG)/Types/GVector.o: Types/GVector.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c Types/GVector.cpp -o $(OBJDIR_DEBUG)/Types/GVector.o

$(OBJDIR_DEBUG)/Types/Gun.o: Types/Gun.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c Types/Gun.cpp -o $(OBJDIR_DEBUG)/Types/Gun.o

$(OBJDIR_DEBUG)/Types/physicsAux.o: Types/physicsAux.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c Types/physicsAux.cpp -o $(OBJDIR_DEBUG)/Types/physicsAux.o

$(OBJDIR_DEBUG)/aux.o: aux.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c aux.cpp -o $(OBJDIR_DEBUG)/aux.o

clean_debug: 
	rm -f $(OBJ_DEBUG) $(OUT_DEBUG)
	rm -rf bin/Debug
	rm -rf $(OBJDIR_DEBUG)
	rm -rf $(OBJDIR_DEBUG)/Factorized
	rm -rf $(OBJDIR_DEBUG)/Systems
	rm -rf $(OBJDIR_DEBUG)/Types

before_release: 
	test -d bin/Release || mkdir -p bin/Release
	test -d $(OBJDIR_RELEASE) || mkdir -p $(OBJDIR_RELEASE)
	test -d $(OBJDIR_RELEASE)/Factorized || mkdir -p $(OBJDIR_RELEASE)/Factorized
	test -d $(OBJDIR_RELEASE)/Systems || mkdir -p $(OBJDIR_RELEASE)/Systems
	test -d $(OBJDIR_RELEASE)/Types || mkdir -p $(OBJDIR_RELEASE)/Types

after_release: 

release: before_release out_release after_release

out_release: before_release $(OBJ_RELEASE) $(DEP_RELEASE)
	$(LD) $(LIBDIR_RELEASE) -o $(OUT_RELEASE) $(OBJ_RELEASE)  $(LDFLAGS_RELEASE) $(LIB_RELEASE)

$(OBJDIR_RELEASE)/main.o: main.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c main.cpp -o $(OBJDIR_RELEASE)/main.o

$(OBJDIR_RELEASE)/resourcePaths.o: resourcePaths.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c resourcePaths.cpp -o $(OBJDIR_RELEASE)/resourcePaths.o

$(OBJDIR_RELEASE)/Factorized/EntitySpawners.o: Factorized/EntitySpawners.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c Factorized/EntitySpawners.cpp -o $(OBJDIR_RELEASE)/Factorized/EntitySpawners.o

$(OBJDIR_RELEASE)/Factorized/gunCommands.o: Factorized/gunCommands.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c Factorized/gunCommands.cpp -o $(OBJDIR_RELEASE)/Factorized/gunCommands.o

$(OBJDIR_RELEASE)/Factorized/menuCommands.o: Factorized/menuCommands.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c Factorized/menuCommands.cpp -o $(OBJDIR_RELEASE)/Factorized/menuCommands.o

$(OBJDIR_RELEASE)/Factorized/physicsCommands.o: Factorized/physicsCommands.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c Factorized/physicsCommands.cpp -o $(OBJDIR_RELEASE)/Factorized/physicsCommands.o

$(OBJDIR_RELEASE)/Systems/InteractiveSim.o: Systems/InteractiveSim.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c Systems/InteractiveSim.cpp -o $(OBJDIR_RELEASE)/Systems/InteractiveSim.o

$(OBJDIR_RELEASE)/Types/Bullet.o: Types/Bullet.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c Types/Bullet.cpp -o $(OBJDIR_RELEASE)/Types/Bullet.o

$(OBJDIR_RELEASE)/Factorized/EntityMgmnt.o: Factorized/EntityMgmnt.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c Factorized/EntityMgmnt.cpp -o $(OBJDIR_RELEASE)/Factorized/EntityMgmnt.o

$(OBJDIR_RELEASE)/Types/Collider.o: Types/Collider.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c Types/Collider.cpp -o $(OBJDIR_RELEASE)/Types/Collider.o

$(OBJDIR_RELEASE)/Types/Entity.o: Types/Entity.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c Types/Entity.cpp -o $(OBJDIR_RELEASE)/Types/Entity.o

$(OBJDIR_RELEASE)/Types/GVector.o: Types/GVector.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c Types/GVector.cpp -o $(OBJDIR_RELEASE)/Types/GVector.o

$(OBJDIR_RELEASE)/Types/Gun.o: Types/Gun.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c Types/Gun.cpp -o $(OBJDIR_RELEASE)/Types/Gun.o

$(OBJDIR_RELEASE)/Types/physicsAux.o: Types/physicsAux.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c Types/physicsAux.cpp -o $(OBJDIR_RELEASE)/Types/physicsAux.o

$(OBJDIR_RELEASE)/aux.o: aux.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c aux.cpp -o $(OBJDIR_RELEASE)/aux.o

clean_release: 
	rm -f $(OBJ_RELEASE) $(OUT_RELEASE)
	rm -rf bin/Release
	rm -rf $(OBJDIR_RELEASE)
	rm -rf $(OBJDIR_RELEASE)/Factorized
	rm -rf $(OBJDIR_RELEASE)/Systems
	rm -rf $(OBJDIR_RELEASE)/Types

.PHONY: before_debug after_debug clean_debug before_release after_release clean_release

