==10975== Memcheck, a memory error detector
==10975== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==10975== Using Valgrind-3.15.0-608cb11914-20190413 and LibVEX; rerun with -h for copyright info
==10975== Command: ./test
==10975== Parent PID: 10974
==10975== 
--10975-- 
--10975-- Valgrind options:
--10975--    --leak-check=full
--10975--    --show-leak-kinds=all
--10975--    --track-origins=yes
--10975--    --verbose
--10975--    --log-file=valgrind-out2.txt
--10975-- Contents of /proc/version:
--10975--   Linux version 5.13.0-30-generic (buildd@lcy02-amd64-003) (gcc (Ubuntu 9.3.0-17ubuntu1~20.04) 9.3.0, GNU ld (GNU Binutils for Ubuntu) 2.34) #33~20.04.1-Ubuntu SMP Mon Feb 7 14:25:10 UTC 2022
--10975-- 
--10975-- Arch and hwcaps: AMD64, LittleEndian, amd64-cx16-lzcnt-rdtscp-sse3-ssse3-avx-bmi
--10975-- Page sizes: currently 4096, max supported 4096
--10975-- Valgrind library directory: /usr/lib/x86_64-linux-gnu/valgrind
--10975-- Reading syms from /home/oneaimlessrobot/scripts/CPP/lust/test
--10975-- Reading syms from /usr/lib/x86_64-linux-gnu/ld-2.31.so
--10975--   Considering /usr/lib/x86_64-linux-gnu/ld-2.31.so ..
--10975--   .. CRC mismatch (computed 975d0390 wanted 30bd717f)
--10975--   Considering /lib/x86_64-linux-gnu/ld-2.31.so ..
--10975--   .. CRC mismatch (computed 975d0390 wanted 30bd717f)
--10975--   Considering /usr/lib/debug/lib/x86_64-linux-gnu/ld-2.31.so ..
--10975--   .. CRC is valid
--10975-- Reading syms from /usr/lib/x86_64-linux-gnu/valgrind/memcheck-amd64-linux
--10975--    object doesn't have a symbol table
--10975--    object doesn't have a dynamic symbol table
--10975-- Scheduler: using generic scheduler lock implementation.
--10975-- Reading suppressions file: /usr/lib/x86_64-linux-gnu/valgrind/default.supp
==10975== embedded gdbserver: reading from /tmp/vgdb-pipe-from-vgdb-to-10975-by-oneaimlessrobot-on-???
==10975== embedded gdbserver: writing to   /tmp/vgdb-pipe-to-vgdb-from-10975-by-oneaimlessrobot-on-???
==10975== embedded gdbserver: shared mem   /tmp/vgdb-pipe-shared-mem-vgdb-10975-by-oneaimlessrobot-on-???
==10975== 
==10975== TO CONTROL THIS PROCESS USING vgdb (which you probably
==10975== don't want to do, unless you know exactly what you're doing,
==10975== or are doing some strange experiment):
==10975==   /usr/lib/x86_64-linux-gnu/valgrind/../../bin/vgdb --pid=10975 ...command...
==10975== 
==10975== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==10975==   /path/to/gdb ./test
==10975== and then give GDB the following command
==10975==   target remote | /usr/lib/x86_64-linux-gnu/valgrind/../../bin/vgdb --pid=10975
==10975== --pid is optional if only one valgrind process is running
==10975== 
--10975-- REDIR: 0x4022e10 (ld-linux-x86-64.so.2:strlen) redirected to 0x580c9ce2 (???)
--10975-- REDIR: 0x4022be0 (ld-linux-x86-64.so.2:index) redirected to 0x580c9cfc (???)
--10975-- Reading syms from /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_core-amd64-linux.so
--10975--    object doesn't have a symbol table
--10975-- Reading syms from /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so
--10975--    object doesn't have a symbol table
==10975== WARNING: new redirection conflicts with existing -- ignoring it
--10975--     old: 0x04022e10 (strlen              ) R-> (0000.0) 0x580c9ce2 ???
--10975--     new: 0x04022e10 (strlen              ) R-> (2007.0) 0x0483f060 strlen
--10975-- REDIR: 0x401f5f0 (ld-linux-x86-64.so.2:strcmp) redirected to 0x483ffd0 (strcmp)
--10975-- REDIR: 0x4023370 (ld-linux-x86-64.so.2:mempcpy) redirected to 0x4843a20 (mempcpy)
--10975-- Reading syms from /usr/lib/x86_64-linux-gnu/libc-2.31.so
--10975--   Considering /usr/lib/x86_64-linux-gnu/libc-2.31.so ..
--10975--   .. CRC mismatch (computed 86b78530 wanted e380f01c)
--10975--   Considering /lib/x86_64-linux-gnu/libc-2.31.so ..
--10975--   .. CRC mismatch (computed 86b78530 wanted e380f01c)
--10975--   Considering /usr/lib/debug/lib/x86_64-linux-gnu/libc-2.31.so ..
--10975--   .. CRC is valid
--10975-- REDIR: 0x490a600 (libc.so.6:memmove) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--10975-- REDIR: 0x4909900 (libc.so.6:strncpy) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--10975-- REDIR: 0x490a930 (libc.so.6:strcasecmp) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--10975-- REDIR: 0x4909220 (libc.so.6:strcat) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--10975-- REDIR: 0x4909960 (libc.so.6:rindex) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--10975-- REDIR: 0x490bdd0 (libc.so.6:rawmemchr) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--10975-- REDIR: 0x4926e60 (libc.so.6:wmemchr) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--10975-- REDIR: 0x49269a0 (libc.so.6:wcscmp) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--10975-- REDIR: 0x490a760 (libc.so.6:mempcpy) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--10975-- REDIR: 0x490a590 (libc.so.6:bcmp) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--10975-- REDIR: 0x4909890 (libc.so.6:strncmp) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--10975-- REDIR: 0x49092d0 (libc.so.6:strcmp) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--10975-- REDIR: 0x490a6c0 (libc.so.6:memset) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--10975-- REDIR: 0x4926960 (libc.so.6:wcschr) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--10975-- REDIR: 0x49097f0 (libc.so.6:strnlen) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--10975-- REDIR: 0x49093b0 (libc.so.6:strcspn) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--10975-- REDIR: 0x490a980 (libc.so.6:strncasecmp) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--10975-- REDIR: 0x4909350 (libc.so.6:strcpy) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--10975-- REDIR: 0x490aad0 (libc.so.6:memcpy@@GLIBC_2.14) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--10975-- REDIR: 0x49280d0 (libc.so.6:wcsnlen) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--10975-- REDIR: 0x49269e0 (libc.so.6:wcscpy) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--10975-- REDIR: 0x49099a0 (libc.so.6:strpbrk) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--10975-- REDIR: 0x4909280 (libc.so.6:index) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--10975-- REDIR: 0x49097b0 (libc.so.6:strlen) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--10975-- REDIR: 0x4912d20 (libc.so.6:memrchr) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--10975-- REDIR: 0x490a9d0 (libc.so.6:strcasecmp_l) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--10975-- REDIR: 0x490a550 (libc.so.6:memchr) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--10975-- REDIR: 0x4926ab0 (libc.so.6:wcslen) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--10975-- REDIR: 0x4909c60 (libc.so.6:strspn) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--10975-- REDIR: 0x490a8d0 (libc.so.6:stpncpy) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--10975-- REDIR: 0x490a870 (libc.so.6:stpcpy) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--10975-- REDIR: 0x490be10 (libc.so.6:strchrnul) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--10975-- REDIR: 0x490aa20 (libc.so.6:strncasecmp_l) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--10975-- REDIR: 0x491ba30 (libc.so.6:__strrchr_sse2) redirected to 0x483ea70 (__strrchr_sse2)
==10975== Stack overflow in thread #1: can't grow stack to 0x1ffe801000
==10975== 
==10975== Process terminating with default action of signal 11 (SIGSEGV)
==10975==  Access not within mapped region at address 0x1FFE801FF8
==10975== Stack overflow in thread #1: can't grow stack to 0x1ffe801000
==10975==    at 0x109136: func (in /home/oneaimlessrobot/scripts/CPP/lust/test)
==10975==  If you believe this happened as a result of a stack
==10975==  overflow in your program's main thread (unlikely but
==10975==  possible), you can try to increase the size of the
==10975==  main thread stack using the --main-stacksize= flag.
==10975==  The main thread stack size used in this run was 8388608.
==10975== Stack overflow in thread #1: can't grow stack to 0x1ffe801000
==10975== 
==10975== Process terminating with default action of signal 11 (SIGSEGV)
==10975==  Access not within mapped region at address 0x1FFE801FF0
==10975== Stack overflow in thread #1: can't grow stack to 0x1ffe801000
==10975==    at 0x4831134: _vgnU_freeres (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_core-amd64-linux.so)
==10975==  If you believe this happened as a result of a stack
==10975==  overflow in your program's main thread (unlikely but
==10975==  possible), you can try to increase the size of the
==10975==  main thread stack using the --main-stacksize= flag.
==10975==  The main thread stack size used in this run was 8388608.
==10975== 
==10975== HEAP SUMMARY:
==10975==     in use at exit: 0 bytes in 0 blocks
==10975==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated
==10975== 
==10975== All heap blocks were freed -- no leaks are possible
==10975== 
==10975== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
