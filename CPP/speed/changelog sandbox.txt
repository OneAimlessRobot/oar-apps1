changelog do meu sandbox:


Acrescentei:

	Circlers. Entidades que possuem trails e que descrevem uma trajetoria circular em volta de um centro.
	Vetores. Agora todos os movimentos são controlados por eles. As acelereções, as velocidades, tudo. Acelereçoes sao basicamente vetores que se adicionam a velocidades a cada frame.
	Vetores sao somaveis.
	Modifiquei jumper, Ltexture, Throwable para funcionarem com vetores.
	Acrescentei classe Object. jumper Throwable passaram a extendê-la.
	Acrescentei planets. eles basicamente atualizam todos os vetores que estejam no seu array com um que aponta para eles (os planets) e tem tamanho inversamente proporcional a sua distância.
	Planets extendem object.
	Os planets agora passam a fazer parte do level. Têem uma textura própria e são geridos pelo level. sao guardados nos mapas. possuem uma constante que faz parte da intensidade do vetor
	que imprimem nos objetos que controlam e que determina se são atratores ou refletores.
	Acrescentei um enumerado usado pela classe vetor que controla o sentido do vetor.
	Os vetores sao renderizaveis.
	Os planets sao renderizaveis.
	Acrescentei atmosferas no jogo. Imprimem uma força de atrito a todos os objetos que controlam. Todos os levels têm uma.
	Acrescentei campos de forças. Imprimem uma acelereção constante a todos os objetos que controlam e que estejam dentro deles.
	Verifiquei que a funçao de gerar desenhos de funções funciona.
	Acrescentei uma funçao de desenhar circulos. suuuuuuuper lenta (preciso de uma alternativa melhor).
	Agora uso o gimp para fazer algumas texturas. (Acelera o desenvolvimento de alguns recursos)
	
	
No futuro:

	-Edição de levels vai ser separada do sandbox em si. No Editor, vao poder ser colocadas, no level varias entidades diferentes em posições diferentes que depois são salvas num
	 ficheiro, e organizadas por categoria.
	-Adicionar atmosferas com vento direcionado. Tenho tido dificuldades em encontrar uma soluçao elegante para implementaçao visto que é mais complicado do que eu pensava. 
	(O codigo para isso está comentado nas classes Level e FluidLayer, nos ficheiros header e source respetivos)
	
	Os editor de levels vai ter as seguintes features:
	
	- Vão ter um sistema de colocar campos de forças semelhante ao dos obstaculos;
	- Vão ter um executavel dedicado.
	- As seguintes variáveis vão ser controláveis pelos ficheiros ".map":
		- textura da atmosfera e densidade do ar
		- textura e a quantidade de obstáculos, assim como a espessura da hitbox;
		- uma sequência de linhas que indica, para cada obstaculo, a posição x,y e a largura e a altura
		- textura e a quantidade de planetas
		- uma sequência de linhas que indica, para cada planeta, a constante ,a  posição e o diametro
		- textura e quantidade de campos de forças
		- uma sequencia de linhas que indica, para cada campo, o Dx e Dx do vetor a aplicar, assim como a intensidade das força
	São tudo dados que precisam de ser fornecidos pelo level, que é a classe sistema do criador de levels
	
	
	Criar uma cópia do programa para experimentar alterar tudo para que vetores, movimentos, etc. Funcionem com precisão de float, já que já vi que era possivel.
	


	Criei um solver de EDO's Lineares. Basicamente desenha os campos de direções e as equações que passam em pontos com o método de Euler.
