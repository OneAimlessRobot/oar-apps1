
                SDL_SetRenderTarget(renderer,map);

                    SDL_SetRenderDrawColor(renderer,skyColor.r,skyColor.g,skyColor.b,skyColor.a);
                    SDL_RenderFillRect(renderer,&air);
                    graphicalLib1::drawWireFrameNAgon(renderer,sunColor,mode.w+50,50,50,360,3);

                SDL_SetRenderTarget(renderer,effects);
                SDL_RenderCopy(renderer,map,NULL,NULL);

                    graphicalLib1::drawLineFromPointVector(renderer,jumperTrailColor,tail);

                SDL_SetRenderTarget(renderer,S_H_A_P_E_S);
                SDL_RenderCopy(renderer,effects,NULL,NULL);

                    SDL_SetRenderTarget(renderer,obstacleLayer);
                    SDL_RenderCopy(renderer,S_H_A_P_E_S,NULL,NULL);

                SDL_SetRenderDrawColor(renderer,obstacleColor.r,obstacleColor.g,obstacleColor.b,obstacleColor.a);
                for(RectNumberPair thing:obstacles){

                    SDL_RenderFillRect(renderer,thing.rect);
                }


                SDL_SetRenderTarget(renderer,NULL);
                SDL_RenderCopy(renderer,obstacleLayer,NULL,NULL);

                grid->renderGrid(renderer,200,70);
                SDL_SetRenderDrawColor(renderer,floorColor.r,floorColor.g,floorColor.b,obstacleColor.a);
                SDL_RenderFillRect(renderer,&floor);


                text->render(renderer);

                text1->render(renderer);

                text2->render(renderer);

                mouseSpeedOmeter->render(renderer);

                mousePositionMeter->render(renderer);

                particleNumberBox->render(renderer);

                armySizeBox->render(renderer);

                jumpTickBox->render(renderer);

                jSpeedBox->render(renderer);

                counterBox->render(renderer);




                        for(SDL_Rect rect:trail){
                            SDL_SetRenderDrawColor(renderer,floorColor.r,floorColor.g,floorColor.b,floorColor.a);
                            SDL_RenderFillRect(renderer,&rect);
                        }

                        for(objectValuePair objNum:army){
                        objNum.obj->renderIteration(renderer);
                        SDL_Point point=(SDL_Point){x1,y1};
                            SDL_bool detect1=SDL_PointInRect(&point,objNum.obj->getBody());
                        if(detect1){
                            std::string objTelemetry="(x,y) = ("+std::to_string(objNum.obj->getTarget().x)+","+std::to_string(objNum.obj->getTarget().y)+") Velocidade "+ std::to_string(speed)+" Valor "+ std::to_string(objNum.value)+" Boxes: "+std::to_string(objNum.obj->getNumOfBoxes());
                            objTelemetryBox=new textBox(renderer,18,x1+3,y1+3,"/usr/share/fonts/truetype/freefont/FreeSans.ttf",255,255,255,255,objTelemetry.std::string::c_str());

                        }
                        }

                objTelemetryBox->render(renderer);
                jumper->render(renderer);
            SDL_RenderPresent(renderer);
