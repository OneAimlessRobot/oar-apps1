let rec firstNat x=
		match x with
		|0 -> []
		|x -> x-1::(firstNat (x-1))
	
;;

firstNat 7

let rec pack x=
		match x with
		| [] -> []
		| head::sHead::trail -> if head=sHead then
														split x
														else
															[]
			
and inc x=
		
		match x with
		| []->0
		| head::sHead::trail -> if head=sHead then
														
and split x=
		match x with
		| [] -> []
		| head::sHead::trail -> if head=sHead then
														head::sHead::(split trail)
														else
															split []
																													
																		
;;

let incPair (x,y)=
				(x,y+1)
;;
			

let rec len x=
		match x with
		| [] ->0
		| head::trail-> 1+ len trail
;;